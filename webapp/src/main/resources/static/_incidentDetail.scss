@use 'variables' as *;



.PageMain-centralBoxDetail {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  background-color: $backgroundColor;
  overflow-y: auto;
  min-height: 102vh;

  @media screen and (min-width: $tablet) {
    width: 70%;
  }

}

.DetailCard {
  display: flex;
  flex-direction: column;
  width: 100%;
  border-radius: 4px;
  background-color: #ffffff;

  @media screen and (min-width: $tablet) {
    padding-top: $spaceL;

  }


  &-header {
    display: flex;
    flex-direction: column;
    height: 70px;
    justify-content: center;
    padding: 0 $space;



    &-title {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      font-weight: bolder;
      font-size: $spaceM;
    }

    p {
      @media screen and (min-width: $tablet) {

        margin-bottom:$space;
      }
    }

  }

  &-imgBox {
    width: 100%;

    &-img {
      width: 100%;
      @media screen and (min-width: $tablet) {

        width: 100%;
      }
    }
  }

  &-catBox {
    display: flex;
    padding: $space;
    gap: $space;
    color: $firstColor;
    font-weight: bolder;
    align-items: center;


  }

  &-des {
    display: flex;
    flex-direction: column;
    padding: 0 $space $space $space;

  }

  &-address {
    display: flex;
    flex-direction: column;
    padding: 0 $space $space $space;

    &-first {
      display: flex;
      align-items: center;

    }

    &-second {
      padding-left: $spaceS;
    }

  }


  .DetailCard-progressBar {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    width: 100%;
    align-items: flex-start;
    padding-left: $space;


    &-step {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      flex: 1; // Makes each step expand evenly


      &-statusLabel {
        min-height: $spaceM;
        text-align: center;
        font-weight: bolder;
      }

      &-witness {
        display: flex;
        align-items: center;
        width: 100%;
        height: 40px;


        svg {
          flex-shrink: 0; // Prevents the SVG from shrinking on smaller screens
        }

        &-bar {
          flex-grow: 1; //  Makes the bar expand to fill remaining space
          height: 6px;
          background-color: #E1E1E2;
          min-width: 40px;
          max-width: 100%;

          &.active {
            background-color: #4CAF50; // verde si está activa
          }
        }
      }

      &.active {
        svg path:first-of-type {
          fill: #4CAF50; // ✅ Verde para el círculo principal
        }

        svg path:last-of-type {
          fill: #34C759; // ✅ Verde para el borde exterior (opcional)
          opacity: 0.5;
        }


      }
    }
  }

  &-Btns {
    display: flex;
    flex-direction: row;
    padding: $space;
    justify-content: flex-end;
    align-items: center;
    gap: $space;

    @media screen and (min-width: $tablet) {
  margin: $space;

    }
  }

}

.Button {
  display: flex;
  padding: 6px 6px 6px 8px;
  align-items: flex-start;
  border-radius: 4px;
  border: 1px solid var(--Outline, rgba(0, 0, 0, 0.12));
  background-color: inherit;


  &:hover {
    cursor: pointer;

  }


}

.modal {
  position: fixed;
  top: -70px;
  left: 0;
  width: 100%;
  height: 100vh;
  z-index: 1000;
  background-color: rgba(0, 0, 0, 0.8);
  display: none;
  overflow-y: auto;
  @media screen and (min-width:$tablet) {
    top: -50px;
    left: 50%;
    height: calc(100vh + 50px);
    transform: translateX(-50%);
  }

}

.modal-content {
  background: white;
  margin: 10% auto;
  width: 100%;
  border-radius: 8px;
  position: relative;
  z-index: 1001;
  @media screen and (min-width: $tablet) {
    width: 80%;
    padding: $spaceL;

  }

  .close {
    position: absolute;
    right: 15px;
    top: 10px;
    font-size: 24px;
    cursor: pointer;
  }

  .UpdateForm {

    &-btn {
      border: 1px solid green !important;

      margin-bottom: 2em;
    }


  }
}