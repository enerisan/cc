@use 'variables' as *;


.CtBoxForm {
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-height: 100vh;
  overflow-y: auto;


}

.FormAdd {
  background-color: $thirdColor;
  min-height: 100vh;
}

.FormContainer {
  overflow-y: auto;

  @media screen and (min-width: $tablet) {
    padding: $space 0 $space 0;
  }


  &-addincident.Form {

    background-color: transparent;
    padding-bottom: 50px;

    @media screen and (min-width: $tablet) {
      width: 90%;
      height: 100%;
      justify-content: center;
      align-items: center;
      display: flex;
      flex-wrap: wrap;
    }

    .location-address {
      width: 100%;


      @media screen and (min-width: $tablet) {

        display: flex;
        flex-direction: row;
        gap: $space;

      }

      .location {
        display: flex;
        flex-direction: row;
        margin-bottom: 0.6em;
        align-items: center;

        &-text {
          font-size: 0.8em;
          padding-bottom: 0.5em;
          color: $firstColor;

          @media screen and (min-width: $tablet) {
            font-size: 1.2em;
          }
        }
      }

      div {
        @media screen and (min-width: $tablet) {
          width: 50%;
        }
      }
    }

    .city-code {
      @media screen and (min-width: $tablet) {
        display: flex;
        flex-direction: row;
        gap: $space;
        width: 100%;


      }

      div {
        @media screen and (min-width: $tablet) {


        }

      }
    }

    .input-group {
      @media screen and (min-width: $tablet) {

        width: 100%;
      }
    }

    .input-group input {
      color: $firstColor;
      border: 1px solid $firstColor;
      transition: border-color 0.3s;

      @media screen and (min-width: $tablet) {
        border: 1px solid $firstColor;
        min-width: 100%;


      }

    }

    .input-group select {
      background-color: transparent;
      width: 100%;
      border: 1px solid $firstColor;
      border-radius: 4px;
      padding: 8px;
      color: $firstColor;
      transition: border-color 0.3s;
      height: 56px;

    }

    .AddImage {
      margin-bottom: 1em;

    }

    .num-code {
      display: flex;
      flex-direction: row;
      gap: 1em;
      width: 100%;

      .input-width-control {
        @media screen and (min-width: $tablet) {
          gap: 2em;
          max-width: auto;
        }
      }
    }


    .input-group textarea {
      background-color: transparent;
      width: 100%;
      border: 1px solid $firstColor;
      border-radius: 4px;
      padding: 8px;
      color: $firstColor;
      transition: border-color 0.3s;
    }

    .input-group label {
      background: $backgroundColor;
      opacity: 0;
    }


    .input-group input:focus + label,
    .input-group input:not(:placeholder-shown) + label {
      opacity: 1;
      color: $firstColor;
    }


    .input-group select:focus {
      border-color: $secondColor;
    }

    .input-group textarea:focus {
      border-color: $secondColor;
    }


    .input-group select:focus + label,
    .input-group + label {
      opacity: 1;
      color: $firstColor;
    }

    .input-group textarea:focus + label,
    .input-group textarea:valid + label {
      opacity: 1;
      color: $firstColor;
    }

    .submit-button {
      margin-top: 1em;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: center;

      p {
        font-size: 0.9em;

        @media screen and (min-width: $tablet) {

          font-size: 1.2em;


        }
      }

      @media screen and (min-width: $tablet) {
        min-width: 100%;
      }

    }

    .submit-button:hover {
      background-color: $firstColor;

      p {
        color: $thirdColor;
      }

    }


    .toggle-location {
      border: none;
      background-color: transparent;
    }

    /*Disabled Geolocation*/
    .toggle-location svg .knob {
      transition: transform 0.3s ease, fill 0.3s ease;
      transform: translateX(0);
      fill: #D8D8D8;

    }

    .toggle-location svg .knobShadow {
      transition: transform 0.4s ease, fill 0.4s ease;


    }

    .toggle-location svg .bg {
      transition: fill 0.3s ease;
      fill: #D8D8D8;

    }


    /*Geolocation activated*/
    .toggle-location.active svg .knob {
      transform: translateX(14px);
      /* moves to right */
      fill: $secondColor;

    }

    .toggle-location.active svg .knobShadow {
      transform: translateX(14px);
    }

    .toggle-location.active svg .bg {
      fill: $firstColor;
    }


  }

  .choices.is-invalid {
    border: 2px solid red;
  }


}

.choices {
  background-color: transparent;
  width: 100%;
  border: 1px solid $firstColor;
  border-radius: 4px;
  padding: 8px;
  color: $firstColor;
  font-size: 1.5em;
  transition: border-color 0.3s;
  height: 56px;
}

.choices.is-focused {
  border-color: $secondColor;
}

.choices .choices__inner {
  background-color: transparent !important;
  border: none;
  width: 100% !important;
}

.choices .choices__placeholder {
  background-color: transparent !important;
  color: $firstColor;
  width: 100% !important;
}

.choices .choices__list--single {
  background-color: transparent !important;
  width: 100% !important;
}

.choices .choices__item--placeholder {
  background-color: transparent !important;
  color: black;
  width: 100% !important;
}

.choices .choices__input {
  background-color: transparent !important;
  width: 100% !important;
}

@media screen and (min-width: $tablet) {
  /* El input donde se escribe */
  .choices__input > input {
    font-size: 1.5em !important;


  }

  /* Placeholder */
  .choices__item--placeholder {
    font-size: 1.5em !important;

  }


  /* Opciones desplegadas */
  .choices__list .choices__item {
    font-size: 1.2em !important;

  }
}
